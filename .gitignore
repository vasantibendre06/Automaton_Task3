# Local .terraform directories
**/.terraform/*
.terraform/
./jenkins-sonarqube/.terraform/providers/registry.terraform.io/hashicorp/aws/5.68.0/linux_amd64/terraform-provider-aws_v5.68.0_x5
./.git/lfs/objects/a4/14/a4145799ab2ed3e56716b6e65f9e55da8c8d8db4487b55ed96365fc4ccd1d01b
./.git/objects/pack/pack-a9dd6b6c8ae3224059c2146f24a1374413650dfc.pack
./ec2-instance/.terraform/providers/registry.terraform.io/hashicorp/aws/5.68.0/linux_amd64/terraform-provider-aws_v5.68.0_x5
# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore transient lock info files created by terraform apply
.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc
